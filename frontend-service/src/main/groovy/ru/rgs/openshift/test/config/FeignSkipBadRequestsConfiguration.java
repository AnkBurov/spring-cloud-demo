package ru.rgs.openshift.test.config;import com.netflix.hystrix.exception.HystrixBadRequestException;import feign.codec.ErrorDecoder;import org.apache.commons.io.IOUtils;import org.apache.commons.lang3.StringUtils;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.http.HttpHeaders;import ru.rgs.openshift.test.exceptions.FeignBadResponseWrapper;/** * Created by jihor on 2017-06-20 */@Configurationpublic class FeignSkipBadRequestsConfiguration {    @Bean    public ErrorDecoder errorDecoder() {        return (methodKey, response) -> {            int status = response.status();            // HystrixBadRequestException's don't affect circuit breaker state https://github.com/Netflix/Hystrix/pull/676 ,            // so if the circuit is open, it will remain open            if (status == 400) {                String body = "Bad request";                try {                    body = IOUtils.toString(response.body().asReader());                } catch (Exception ignored) {}                HttpHeaders httpHeaders = new HttpHeaders();                response.headers().forEach((k, v) -> httpHeaders.add("feign-" + k, StringUtils.join(v,",")));                return new HystrixBadRequestException("Bad request", new FeignBadResponseWrapper(status, httpHeaders, body));            }            else {                return new RuntimeException("Response Code " + status);            }        };    }}